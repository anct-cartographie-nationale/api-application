---
name: Deploy API

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Prepare release
        uses: mgoltzsche/conventional-release@v0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.7

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Prepare and Zip .mjs files
        run: |
          for file in dist/*.mjs; do
            filename=$(basename -- "$file")
            filename_noext="${filename%.*}"
            mv "$file" "dist/index.mjs"
            (cd dist && zip "$filename_noext.zip" "index.mjs")
            rm "dist/index.mjs"
          done

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: fangqiuming/latest-release-version@v1.2

      - name: Set Major Version
        id: set-major-version
        run: echo "MAJOR_VERSION=$(echo ${{ steps.fetch-latest-release.outputs.tag_name }} | cut -d '.' -f 1)" >> $GITHUB_ENV

      - name: Publish on S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          SOURCE_DIR: 'build'
          DEST_DIR: $MAJOR_VERSION

      - name: Deploy API Gateway
        uses: codingones/github-actions-workflows/.github/workflows/apply.terraform.yml@main
        with:
          infrastructure-repository: 'anct-cartographie-nationale/api-infrastructure'
          workspace-name: 'api-infrastructure'
        secrets:
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

  deploy:
    name: Deploy API Gateway
    needs: publish
    uses: codingones/github-actions-workflows/.github/workflows/apply.terraform.yml@main
    with:
      infrastructure-repository: 'anct-cartographie-nationale/api-infrastructure'
      workspace-name: 'api-production'
    secrets:
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
